'''
1. 우리가 구하고자 하는 것 : 모든 사람이 심사를 받는데 걸리는 시간
2. 답의 범위를 좁힌다. -> 제일빠른 심사위원값보다는 클 것, 가장 느린 심사위원보다는 작을 것
3. 이분탐색을 이용해 답의 범위안에서 만족하는 최소값을 구한다. 
'''

'''
testcase : n = 6, times = [7, 10]
 - 최악의 시간은 6 * 10 = 60분. 
 - 상징적인 값인 1분을 상정한 후 1분과 60분의 중간 값인 30을 정한다.
 - 30분 동안 몇명이 입국심사할 수 있는지 계산한다. (30 // 7 + 30 // 10) -> 30분동안 7명 심사가능
 - 7명 > 6명(=n) : 30분은 충분한 시간 -> 30분보다 작은 값 가능
 - 1분 ~ 30분 -> 15분동안 해결가능한사람 = 3명
 - 15분 ~ 30분 -> 22분동안 해결가능한사람 = 5명
 - 22분 ~ 30분 -> 26분동안 해결가능한사람 = 5명
 - 26분 ~ 30분 -> 28분동안 해결가능한사람 = 6명
 - 혹시 모르니 27분도 해보자
'''

'''
[중요한 것!!!]
 - 어떤 것을 이분탐색의 기준으로 삼을지 판단하는게 중요!
 - start, end, mid : 어떤 기준으로 가지고갈 지 결정중요!
'''

n = 6
times = [7, 10]


def solution(n, times):
    start, end = 1, max(times) * n
    answer = 0
    while start <= end:
        people = 0
        mid = (start + end) // 2

        for i in times:
            people += mid // i  # mid시간동안 얼마나 많은 사람들을 심사할 수 있는가
        print(people)
        if people < n:  # 모든 사람 심사할 수 있으면
            start = mid + 1
        else:
            end = mid - 1
            answer = mid

    # print(answer)
    return answer

