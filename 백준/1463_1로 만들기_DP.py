'''
[연산 방법]
1. X가 3으로 나누어 떨어지면, 3으로 나눈다.
2. X가 2로 나누어 떨어지면, 2로 나눈다.
3. 1을 뺀다.
'''

'''
[풀이 방법]
1. X가 2로 나누어지면 2로 나누고, 3으로 나누어질 때는 3으로 나눔 -> but 예외 존재
   1-1. 예를 들어 10은 2로 나눌 경우 4번(10->5->4->2->1)의 연산이 필요하지만 최소값은 3번(10->9->3->1)이다.
   1-2. 10 -> 9 -> 8 -> 4 -> 2 -> 1
                          -> 3 -> 1
                -> 3 -> 1
           -> 5 -> 4 -> 2 -> 1
                     -> 3 -> 1
        이때, 3, 4 등 겹치는 부분이 발생
    if not n % 3(n%3==0): dp[n] = min(dp[n-1], dp[n//3])
    if not n % 2(n%2==0): dp[n] = min(dp[n-1], dp[n//2])
'''
x = int(input())

dp = [0 for _ in range(x + 1)]
dp[1] = 0  # 1은 연산방법1, 2, 3중에 사용할 수 있는 것이 없음

for i in range(2, x + 1):
    dp[i] = dp[i - 1] + 1
    if i % 2 and dp[i] > dp[i//2] + 1:  # 홀수이고, 갯수가 더 작으면
        dp[i] = dp[i//2] + 1  # 더 작은 값으로 갱신
    if i % 3 and dp[i] > dp[i//3] + 1:  # 홀수이고,
        dp[i] = dp[i//3] + 1

print(dp)